<Page
    x:Class="IOTOIApp.Views.Sensor.SensorSettingPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:IOTOIApp.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Style="{StaticResource PageStyle}"
    DataContext="{Binding SensorSettingViewModel, Source={StaticResource Locator}}"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:models="using:IOTOIApp.Models"
    xmlns:utils="using:IOTOIApp.Utils"
    mc:Ignorable="d">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Dark">
                    <SolidColorBrush x:Key="TextControlBackgroundFocused" Color="Transparent"/>
                    <SolidColorBrush x:Key="TextControlForegroundFocused" Color="White"/>

                    <Style TargetType="TextBox">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="#7a7b7b" />
                    </Style>

                    <utils:BooleanToVisibilityConverter x:Key="BoolToVis" />
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <Grid x:Name="ContentArea"  Margin="{StaticResource ContentAreaMargin}">
        <Grid.RowDefinitions>
            <RowDefinition Height="120"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="100"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Border Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Right" BorderThickness="2" BorderBrush="#7a7b7b" />

                <StackPanel VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0 0 36 0">
                    <RadioButton x:Name="SettingMotion" Width="78" Height="78" Background="Black" Style="{StaticResource EmptyRadioButtonStyle}" Margin="0 0 0 24" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                        <i:Interaction.Behaviors>
                            <ic:EventTriggerBehavior EventName="Checked">
                                <ic:InvokeCommandAction Command="{Binding ElementName=SettingMotion, Path=DataContext.SettingCommand}" CommandParameter="Motion Sensor"/>
                            </ic:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                        
                        <RadioButton.Content>
                            <Grid>
                                <Grid>
                                    <!--<TextBlock Text="{StaticResource IconMotion}" FontSize="30" Foreground="#7a7b7b" FontFamily="{StaticResource IconFontFamily}" VerticalAlignment="Center" HorizontalAlignment="Center" />-->
                                    <Image Source="/Assets/Icons/motion-icon.png" Width="34" Height="38" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </Grid>
                                
                                <Grid Visibility="{Binding Path=IsChecked, ElementName=SettingMotion, Converter={StaticResource BoolToVis}}">
                                    <Border BorderBrush="#ffcb00" BorderThickness="2" Height="2" VerticalAlignment="Top" HorizontalAlignment="Stretch" />
                                    <!--<TextBlock Text="{StaticResource IconMotion}" FontSize="30" Foreground="#ffcb00" FontFamily="{StaticResource IconFontFamily}" VerticalAlignment="Center" HorizontalAlignment="Center" />-->
                                    <Image Source="/Assets/Icons/motion-setting.png" Width="34" Height="38" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </Grid>                                
                            </Grid>
                        </RadioButton.Content>
                    </RadioButton>

                    <RadioButton x:Name="SettingMagnetic" Width="78" Height="78" Background="Black" Style="{StaticResource EmptyRadioButtonStyle}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                        <i:Interaction.Behaviors>
                            <ic:EventTriggerBehavior EventName="Checked">
                                <ic:InvokeCommandAction Command="{Binding ElementName=SettingMagnetic, Path=DataContext.SettingCommand}" CommandParameter="Magnetic"/>
                            </ic:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                        
                        <RadioButton.Content>
                            <Grid>
                                <Grid>
                                    <!--<TextBlock Text="{StaticResource IconMagnetic}" FontSize="30" Foreground="#7a7b7b" FontFamily="{StaticResource IconFontFamily}" VerticalAlignment="Center" HorizontalAlignment="Center" />-->
                                    <Image Source="/Assets/Icons/door-icon.png" Width="24" Height="36" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </Grid>

                                <Grid Visibility="{Binding Path=IsChecked, ElementName=SettingMagnetic, Converter={StaticResource BoolToVis}}">
                                    <Border BorderBrush="#ffcb00" BorderThickness="2" Height="2" VerticalAlignment="Top" HorizontalAlignment="Stretch" />
                                    <!--<TextBlock Text="{StaticResource IconMagnetic}" FontSize="30" Foreground="#ffcb00" FontFamily="{StaticResource IconFontFamily}" VerticalAlignment="Center" HorizontalAlignment="Center" />-->
                                    <Image Source="/Assets/Icons/door-setting.png" Width="24" Height="36" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </Grid>
                            </Grid>
                        </RadioButton.Content>
                    </RadioButton>
                </StackPanel>

                <Button Content="SAVE" Width="76" Height="36" FontSize="16" Foreground="#ffcb00" Background="Transparent" BorderBrush="#ffcb00" BorderThickness="1" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0 0 36 10"
                        Command="{x:Bind ViewModel.SaveCommand}"/>
            </Grid>

            <Grid Grid.Column="1" Background="#a0000000" Margin="0 0 150 0">
                <!-- WideState -->
                <ListView x:Name="SensorList"
                          Visibility="Collapsed"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          Margin="40"
                          ItemsSource="{x:Bind ViewModel.SensorDeviceListSources}"
                          ScrollViewer.HorizontalScrollMode="Disabled" 
                          ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                          ScrollViewer.VerticalScrollMode="Enabled"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          SelectionMode="None"
                          IsItemClickEnabled="False">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="models:Sensor">
                            <Grid Height="80">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="3*" />
                                    <!--<ColumnDefinition Width="2*" />-->
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="{x:Bind SensorViewTitle}" Grid.Column="0" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                <TextBox Text="{x:Bind SensorName}" Grid.Column="1" PlaceholderText="Rename" Foreground="White" Height="44" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5 0 0 0" Padding="5 7 0 0" BorderBrush="#7a7b7b" />
                                <!--<ComboBox Grid.Column="2" PlaceholderText="Select Space" Height="44" VerticalAlignment="Center" HorizontalAlignment="Stretch" VerticalContentAlignment="Center"  Margin="30 0 10 0" IsEnabled="False">
                                    <x:String>Blue</x:String>
                                    <x:String>Green</x:String>
                                    <x:String>Red</x:String>
                                    <x:String>Yellow</x:String>
                                </ComboBox>-->
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <!-- NarrowState -->
                <ListView x:Name="SensorListN"
                          Visibility="Collapsed"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          Margin="40"
                          ItemsSource="{x:Bind ViewModel.SensorDeviceListSources}"
                          ScrollViewer.HorizontalScrollMode="Disabled" 
                          ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                          ScrollViewer.VerticalScrollMode="Enabled"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          SelectionMode="None"
                          IsItemClickEnabled="False">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="models:Sensor">
                            <!--<Grid Height="120">-->
                            <Grid Height="80">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="3*" />
                                </Grid.ColumnDefinitions>

                                <!--<Grid.RowDefinitions>
                                    <RowDefinition Height="48" />
                                    <RowDefinition Height="48" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>-->

                                <TextBlock Text="{x:Bind SensorViewTitle}" Grid.Column="0" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                <TextBox Text="{x:Bind SensorName}" Grid.Column="1" PlaceholderText="Rename" Foreground="White" Height="42" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5 0 20 0" Padding="5 7 0 0" BorderBrush="#7a7b7b" />
                                
                                <!--<ComboBox Grid.Row="1" Grid.Column="1" PlaceholderText="Select Space" Height="42" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5 0 20 0" IsEnabled="False">
                                    <x:String>Blue</x:String>
                                    <x:String>Green</x:String>
                                    <x:String>Red</x:String>
                                    <x:String>Yellow</x:String>
                                </ComboBox>-->
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </Grid>



        <Button Grid.Row="0" Content="{StaticResource IconBack}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="30 30 0 0" Background="Transparent" FontFamily="{StaticResource IconFontFamily}" FontSize="30" IsTabStop="False"
                Command="{x:Bind ViewModel.BackButtonClickedCommand}"/>

        <!--  Adaptive triggers  -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SensorList.Visibility" Value="Visible" />
                        <Setter Target="SensorListN.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SensorList.Visibility" Value="Collapsed" />
                        <Setter Target="SensorListN.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
